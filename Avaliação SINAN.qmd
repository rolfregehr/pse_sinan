---
title: "Avaliação SINAN / PSE"
author: "DataSenado"
format:
  html:
    grid: 
      body-width: 1200px
      sidebar-width: 100px
      margin-width: 100px
    toc: true
    toc-title: "Conteúdo"
    max-width: 1000px
    css: custom.css
ojs: true
execute:
  freeze: auto
  echo: false
---

# Introdução

::: justified-text
O Sistema de Informações de Agravos de Notificação (SINAN), é uma ferramenta do Ministério da Saúde do Brasil que tem como objetivo coletar, transmitir e disseminar dados sobre doenças e agravos de notificação compulsória. Um desses agravos se referem às violências. Semanalmente ([PORTARIA Nº 1.061, DE 18 DE MAIO DE 2020](https://bvsms.saude.gov.br/bvs/saudelegis/gm/2020/prt1061_29_05_2020.html)) as secretarias de saúde (municipais e estaduais) devem notificar casos de violência doméstica, sexual e ou tentativa de suicídio.

Já o [Programa Saúde na Escola (PSE)](https://portal.mec.gov.br/expansao-da-rede-federal/194secretarias-112877938/secad-educacao-continuada-223369541/14578-programa-saude-nas-escolas#:~:text=O%20PSE%20tem%20como%20objetivo,da%20rede%20p%C3%BAblica%20de%20ensino.) tem como objetivo "contribuir para a formação integral dos estudantes por meio de ações de promoção, prevenção e atenção à saúde, com vistas ao enfrentamento das vulnerabilidades que comprometem o pleno desenvolvimento de crianças e jovens da rede pública de ensino".

Ambas ações tem relação quando se trata de violência contra a mulher, seja na identificação e registro (SINAN) ou na prevenção (PSE) que têm ações de saúde mental, que contribui para maior consciência da situação de violência e preventivas, com a ação de promoção da cultura de paz, cidadania e direitos humanos e prevenção da violência e dos acidentes. Ambos com potencial de reduzir a violência na perspectiva da vítima e do eventual agressor. 
:::

# Violências

O sistema de notificação de agravo traz detalhes das violências sofridas em todo o território nacional

## Por gênero

```{ojs}
// Controles reativos do Observable
import { Inputs } from "@observablehq/inputs"

// Carrega a biblioteca Plotly.js de forma robusta
Plotly = require("plotly.js-dist@2.27.0")

// Carrega o arquivo CSV local
populacao = FileAttachment("dados_populacao.csv").csv({ typed: true })

// Extrai as colunas para arrays separados para facilitar o uso
idade = populacao.map(d => d.idade)
dados_feminino = populacao.map(d => d.feminino)
dados_masculino = populacao.map(d => d.masculino)


traces = () => [
  { 
    x: idade, 
    y: dados_feminino, 
    mode: "lines", 
    name: `Feminino` ,
    line: {color: '#66C2A5'}
  },
  { 
    x: idade, 
    y: dados_masculino, 
    mode: "lines", 
    name: `Masculino`,
    line: {color: '#FC8D62'} 
  }
]


{
  const div = html`<div style="width:1200px;height:600px;"></div>`;

  // Define o layout, incluindo os títulos dos eixos
  const layout = {
    width: 1200,        // Largura fixa
    height: 600,        // Altura fixa
    xaxis: { title: "Idade" },
    yaxis: { title: "População" },
    margin: { t: 20 },
    legend: { title: { text: "Clique para ocultar/exibir" } }
  };

  // Renderiza o gráfico inicial
  Plotly.newPlot(div, traces(), layout, {responsive: true});

  // Esta linha mágica garante que o gráfico antigo seja removido
  // antes de um novo ser desenhado quando os sliders mudam.
  invalidation.then(() => Plotly.purge(div));

  // Retorna o elemento div para ser exibido na página
  return div;
}


```

## Por tipo de violência (6 maiores)

```{ojs}
// Controles reativos do Observable
import { Inputs } from "@observablehq/inputs"


// Carrega o arquivo CSV local
tab_01 = FileAttachment("csv/tab_01.csv").csv({ typed: true })

// Extrai as colunas para arrays separados para facilitar o uso
data = tab_01.map(d => d.data)
dados_fisica = tab_01.map(d => d.Física)
dados_negligencia = tab_01.map(d => d.Negligência)
dados_outras = tab_01.map(d => d.Outras)
dados_psico = tab_01.map(d => d.Psicológica)
dados_sexual = tab_01.map(d => d.Sexual)
dados_tortura = tab_01.map(d => d.Tortura)


traces_tab_01 = () => [
  { 
    x: data, 
    y: dados_fisica, 
    mode: "lines", 
    name: `Física` ,
    line: {color: '#66C2A5'}
  },
  { 
    x: data, 
    y: dados_negligencia, 
    mode: "lines", 
    name: `Negligência`,
    line: {color: '#FC8D62'} 
  },
  { 
    x: data, 
    y: dados_outras, 
    mode: "lines", 
    name: `Outras`,
    line: {color: '#8DA0CB'} 
  },
  { 
    x: data, 
    y: dados_psico, 
    mode: "lines", 
    name: `Psicológica`,
    line: {color: '#E78AC3'} 
  },
  { 
    x: data, 
    y: dados_sexual, 
    mode: "lines", 
    name: `Sexual`,
    line: {color: '#A6D854'} 
  },
  { 
    x: data, 
    y: dados_tortura, 
    mode: "lines", 
    name: `Tortura`,
    line: {color: '#E5C494'} 
  }
]


{
  const div = html`<div style="width:800px;height:100%;"></div>`;

 const layout = {
    width: 1200,        // Largura fixa
    height: 600,        // Altura fixa
  
    title: {
      text: "Violências por idade e tipo",
      x: 0.5,
      xanchor: 'center'
    },
    xaxis: { title: "Idade da vítima" },
    yaxis: { title: "Número de casos" },
    margin: { t: 50, r: 150 }, // margem direita para os botões
    legend: { title: { text: "Clique para ocultar/exibir" } },
    updatemenus: [{
      type: "buttons",
      direction: "left",
      x: 1.02,
      xanchor: "left",
      y: 0.5,
      yanchor: "middle",
      buttons: [
        {
          method: "restyle",
          args: [{"visible": [true, true, true, true, true, true]}],
          label: "Mostrar Todos"
        },
        {
          method: "restyle", 
          args: [{"visible": ["legendonly", "legendonly", "legendonly", "legendonly", "legendonly", "legendonly"]}],
          label: "Apagar Todos"
        }
      ]
    }]
  };
  
  // Renderiza o gráfico inicial
  Plotly.newPlot(div, traces_tab_01(), layout);

  // Esta linha mágica garante que o gráfico antigo seja removido
  // antes de um novo ser desenhado quando os sliders mudam.
  invalidation.then(() => Plotly.purge(div));

  // Retorna o elemento div para ser exibido na página
  return div;
}


```

As violências contidas em **'Outras'** são: _financeira,_ _trabalho infantil_, _violência policial_, _tráfico de seres humanos_.


## Por tipo e idade

```{ojs}
// Controles reativos do Observable
import { Inputs } from "@observablehq/inputs"


// Carrega o arquivo CSV local
tab_02 = FileAttachment("csv/tab_02.csv").csv({ typed: true })

// Extrai as colunas para arrays separados para facilitar o uso
idade_02 = tab_02.map(d => d.idade)
dados_fisica_02 = tab_02.map(d => d.Física)
dados_negligencia_02 = tab_02.map(d => d.Negligência)
dados_outras_02 = tab_02.map(d => d.Outras)
dados_psico_02 = tab_02.map(d => d.Psicológica)
dados_sexual_02 = tab_02.map(d => d.Sexual)
dados_tortura_02 = tab_02.map(d => d.Tortura)


traces_tab_02 = () => [
  { 
    x: idade_02, 
    y: dados_fisica_02, 
    mode: "lines", 
    name: `Física` ,
    line: {color: '#66C2A5'}
  },
  { 
    x: idade_02, 
    y: dados_negligencia_02, 
    mode: "lines", 
    name: `Negligência`,
    line: {color: '#FC8D62'} 
  },
  { 
    x: idade_02, 
    y: dados_outras_02, 
    mode: "lines", 
    name: `Outras`,
    line: {color: '#8DA0CB'} 
  },
  { 
    x: idade_02, 
    y: dados_psico_02, 
    mode: "lines", 
    name: `Psicológica`,
    line: {color: '#E78AC3'} 
  },
  { 
    x: idade_02, 
    y: dados_sexual_02, 
    mode: "lines", 
    name: `Sexual`,
    line: {color: '#A6D854'} 
  },
  { 
    x: idade_02, 
    y: dados_tortura_02, 
    mode: "lines", 
    name: `Tortura`,
    line: {color: '#E5C494'} 
  }
]


{
  const div = html`<div style="width:1200px;height:600px;"></div>`;


 const layout = {
    width: 1200,        // Largura fixa
    height: 600,        // Altura fixa
    title: {
    text: "Violências por idade e tipo",
      x: 0.5,
      xanchor: 'center'
    },
    xaxis: { title: "Idade da vítima" },
    yaxis: { title: "Número de casos" },
    margin: { t: 50, r: 150 }, // margem direita para os botões
    legend: { title: { text: "Clique para ocultar/exibir" } },
    updatemenus: [{
      type: "buttons",
      direction: "left",
      x: 1.02,
      xanchor: "left",
      y: 0.5,
      yanchor: "middle",
      buttons: [
        {
          method: "restyle",
          args: [{"visible": [true, true, true, true, true, true]}],
          label: "Mostrar Todos"
        },
        {
          method: "restyle", 
          args: [{"visible": ["legendonly", "legendonly", "legendonly", "legendonly", "legendonly", "legendonly"]}],
          label: "Apagar Todos"
        }
      ]
    }]
  };

  // Renderiza o gráfico inicial
  Plotly.newPlot(div, traces_tab_02(), layout);

  // Esta linha mágica garante que o gráfico antigo seja removido
  // antes de um novo ser desenhado quando os sliders mudam.
  invalidation.then(() => Plotly.purge(div));

  // Retorna o elemento div para ser exibido na página
  return div;
}


```


## Outros

Aqui está o gráfico que ilustra as ocorrências de violência:

![](graf_idade_genero_tipo.svg){fig-align="center" width="80%"}

![](graf_idade_racacor_tipo.svg){fig-align="center" width="80%"}

![](graf_idade_tipo_racacor.svg){fig-align="center" width="80%"}






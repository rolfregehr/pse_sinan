---
title: "Chart.js + Observable no Quarto (Sliders, sem animação)"
format:
  html:
    toc: true
ojs: true
execute:
  freeze: auto
---

# Demonstração interativa
Versão sem animações incômodas: **Chart.js** reage aos _sliders_ sem “voar” a partir do canto da tela.

## Bibliotecas
```{ojs}
// Controles do Observable
import { Inputs } from "@observablehq/inputs"

// Importa Chart.js usando a sintaxe do Observable
// Isso cria uma célula chamada "Chart" com o construtor da biblioteca
{ Chart } = import("https://cdn.jsdelivr.net/npm/chart.js@4.4.3/auto/+esm")

## Dados‑base
```

```{ojs}
x = Array.from({ length: 101 }, (_, i) => i / 10)
```

## Controles

```{ojs}
viewof ampSin = Inputs.range([0, 2], { step: 0.1, value: 1, label: "Amplitude do Seno" })
viewof ampCos = Inputs.range([0, 2], { step: 0.1, value: 1, label: "Amplitude do Cosseno" })
```

## Datasets atualizados

```{ojs}
datasets = () => [
  {
    label: `Seno × ${ampSin}`,
    data: x.map(d => ampSin * Math.sin(d)),
    borderWidth: 2,
    fill: false
  },
  {
    label: `Cosseno × ${ampCos}`,
    data: x.map(d => ampCos * Math.cos(d)),
    borderWidth: 2,
    fill: false
  }
]
```

## Gráfico interativo

```{ojs}
viewof chartLine = {
  const canvas = html`<canvas style="max-width:100%;height:400px;"></canvas>`;
  const ctx = canvas.getContext("2d");

  // Cria gráfico sem animações globais
  const chart = new Chart(ctx, {
    type: "line",
    data: { labels: x, datasets: datasets() },
    options: {
      responsive: true,
      animation: false,                // Desliga animações
      interaction: { mode: "nearest", intersect: false },
      plugins: {
        legend: {
          title: { text: "Clique para ocultar/exibir séries" }
        }
      },
      scales: {
        x: { title: { display: true, text: "x" } },
        y: { title: { display: true, text: "Amplitude" } }
      }
    }
  });

  // Atualiza dados sempre que sliders mudam
  ampSin; ampCos;
  chart.data.datasets = datasets();
  chart.update("none");               // 'none' = sem animação

  // Limpeza ao invalidar
  invalidation.then(() => chart.destroy());

  return canvas;
}
```

> Ajuste os _sliders_ e observe atualização imediata, sem animações indesejadas. A legenda continua permitindo ocultar/exibir cada série.

## Conclusão

- `animation: false` nas opções + `chart.update("none")` removem os efeitos visuais indesejados.  
- Estrutura permanece igual: sliders → dados reativos → atualização limpa.  

Salve como `chartjs_slider_noanim.qmd` e execute:

```bash
quarto preview chartjs_slider_noanim.qmd
```
